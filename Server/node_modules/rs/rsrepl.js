/*
 * node-rs: Rapidshare API Implementation
 * Copyright (C) 2012 dxld <dxld Ã„T darkboxed DOT org>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

var vm = require('vm');
var rs = require('./rs');
var util = require('util');
var repl = require("repl");

var auth = process.env.AUTH;
if(!auth) process.exit(1);

auth = auth.split(':');
var username = auth[0];
var password = auth[1];

var session = rs.createSession();
session.login(username, password, function() {

});

function default_callback(err, res) {
    // console.log(arguments);
    global._eval_cb(err, res);
}

function async_eval(code, context, file, cb) {
    var err, result;
    try {
        global._eval_cb = cb;
        result = vm.runInContext(code, context, file);
        if(result !== '#repl async#') {
            cb(err, result);
        }
    } catch (e) {
        cb(e);
    }
}

var obj = session.constructor.prototype;
var fns = Object.keys(obj);
fns.forEach(function(fn){
    session[fn] = function(){
        var args = Array.prototype.slice.apply(arguments);
        var callback = args.slice(-1)[0];
        if(typeof callback !== 'function') {
            args.push(default_callback);
        }
        var ret = obj[fn].apply(session, args);
        if(!ret)
            return '#repl async#'
    }
    session[fn].name = fn;
});

var r = repl.start('> ');
r.eval = async_eval;
r.context.s = session;

