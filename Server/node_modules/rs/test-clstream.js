var fs = require('fs');
var async = require('async');
var ClampedStream = require('./clamped-stream');

var i = 1;


var rstream = fs.createReadStream('./testdata', { bufferSize: 1500 });
log_events(rstream, '->');

var cstream = new ClampedStream(rstream, 2000);
log_events(cstream, '##');

cstream.pipe(make_wstream());

cstream.once('end', function() {
    cstream.pipe(make_wstream());
    cstream.resume();

    cstream.once('end', function() {
        cstream.pipe(make_wstream());
        cstream.resume();
    });

});


function make_wstream() {
    var wstream = fs.createWriteStream('/tmp/_node_test' + i++);
    log_events(wstream, '<-');

    return wstream;
}

function log_events(s, type) {
    s.on('data', logger(type, 'data'));
    s.on('end', logger(type, 'end'));
    s.on('close', logger(type, 'close'));
    s.on('real_close', logger(type, 'real_close'));

    function logger(type, ev) { return function() { console.log(type, ev) }; }
}