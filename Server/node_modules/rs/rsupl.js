#!/usr/bin/env node
/*
 * node-rs: Rapidshare API Implementation
 * Copyright (C) 2012 dxld <dxld Ã„T darkboxed DOT org>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

var fs = require('fs');
var URL = require('url');
var http = require('http');
var path = require('path');
var async = require('async');
var query = require('querystring');
var crypto = require('crypto');
var request = require('request');

var rs = require('./rs');
var utils = require('./utils');

/* Options
 */
var opt = utils.parse_opts([ 'file', 'folder' ]);

if(opt.help) {
    usage();
    process.exit(0);
}

if(!opt.file && !opt.filename) {
    console.error('rsupl: FILENAME is required if no FILE given.');
    process.exit(0);
}

if(file == '-') file = null;

var cookie_file = opt.cookie;
var file = opt.file;
var filename = opt.filename;
var folder = opt.folder, folderid;

/* get username/password from env */
var credentials = utils.auth_env();

/* Main
 */
var folderid;
var session = rs.createSession();
async.series([
    function(callback) {
        utils.auth(session, cookie_file, callback)
    },
    function(callback){
        if(folder) {
            session.mkdir(folder, function(err, folder){
                if(err) { callback(err); return; }

                folderid = folder.id;
                callback(null);
            });
        } else {
            callback(null);
        }
    },
    function(callback){
        if(!file || file == '-') {
            var stream = process.stdin;
        } else {
            var stream = fs.createReadStream(file);
        }

        var filedesc = {
            name: filename || path.basename(file)
            , stream: stream
            , folder: folderid
        };

        var hash = null, size = null;
        register_meta_callback(stream, function(err, _size, _hash) {
            size = _size;
            hash = _hash;
        });

        var chunkSize = opt.csize || (2 * 1000 * 1000 * 1000);
        session.upload_chunked(filedesc, chunkSize, function(err, res) {
            var index_file = folder + '/' + filedesc.name;

            var json = {
                name: filename,
                size: size,
                sha1: hash,
                parts: res
            }

            session.upload_json(index_file, json, callback);
        });
    }
], function(err){
    if(err) { console.error(err.stack); console.error(err); return; }

    console.log('OK');
});

function register_meta_callback(stream, callback) {
    var hash = crypto.createHash('sha1');
    var size = 0;

    stream.on('data', function(chunk) {
        size += chunk.length;
        hash.update(chunk);
    });

    stream.on('close', function() {
        callback(null, size, hash.digest('hex'));
    });
}

/******************************************************************************
 * UI functions
 */

function usage() {
    console.error(
[ 'Usage: rsupl --cookie=COOKIEFILE ( FILE | --filename=FILENAME )',
  '             [--folder=FOLDER]',
  '',
  '  --help                   Display this help message',
  '  --cookie=COOKIEFILE      File containing the RapidShare API cookie',
  '                           (see rslogin)',
  '  --filename=FILENAME      Name of the file on the server',
  '  --folder=FOLDER          Name of the file\'s destination xfolder',
  '  --csize=SIZE             Maximum size (in bytes) of file chunks on the',
  '                           rapidshare servers',
  '',
  'With no FILE, or when FILE is -, read standard input. However FILENAME is',
  'required in that case.'
].join('\n'));
}
