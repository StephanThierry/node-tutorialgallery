#!/usr/bin/env node
/*
 * node-rs: Rapidshare API Implementation
 * Copyright (C) 2012 dxld <dxld Ã„T darkboxed DOT org>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

var async = require('async');

var rs = require('./rs');
var utils = require('./utils');

var args = process.argv.slice(2);

var session = rs.createSession();
utils.auth(session, function(err){
    if(err) { console.error(err.stack); console.error(err); return; }

    var dirs = [], files = [];

    async.forEach(args, function(f, callback){
        var m;
        if(m = f.match(/^[0-9]+$/)) {
            files.push(f);
            callback(null);
        } else if(m = f.match(/^d([0-9]+)$/)) {
            dirs.push(m[1]);
            callback(null);
        } else {
            session.resolve_path(f, function(err, node){
                if(err) { callback(err); return; }

                console.log('node', node);
                if(node && !node.id) return;

                if(node.is_folder) {
                    dirs.push(node.id);
                } else {
                    files.push(node.id);
                }

                callback(null);
            });
        }
    }, function(err) {
        if(err) { console.error(err.stack); console.error(err); return; }

        async.series([
            function(callback) {
                if(files.length > 0)
                    session.delete_files(files, callback);
                else callback(null);
            },
            function(callback) {
                if(dirs.length > 0)
                    session.delete_folders(dirs, callback);
                else callback(null);
            }
        ], function(err){
            if(err) { console.error(err.stack); console.error(err); return; }

            process.exit(0);
        });
    });
});
